{"version":3,"sources":["reducers/mainReducer.js","App.js","redux/store.js","index.js"],"names":["_","require","CONVERT_JSON","initialState","result","functions","include","item","key","value","exclude","mainReducer","copyOfState","state","action","type","newState","cloneDeep","objectsForAnalysis","data","jsonObj","condition","length","keyOfJsonObj","arrayOfConditions","keysOfConditions","valuesOfConditions","i","push","Object","keys","values","filter","objectForAnalysis","every","index","sort_by","sort","a","b","counter","isMore","c","err","alert","message","App","store","useState","undefined","json1","setJSON1","json2","setJSON2","setResult","dispatch","useDispatch","changeJSON","e","convert","JSON","stringify","getState","branch1","className","InputLabel","Input","onChange","file","target","files","reader","FileReader","onload","parse","error","readAsText","addJSON1","addJSON2","Button","variant","onClick","reducers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ef2ddc5.chunk.js","sourcesContent":["let _ = require('lodash');\r\n\r\nconst CONVERT_JSON = 'CONVERT_JSON';\r\n\r\nlet initialState = {\r\n    result: null,\r\n    functions: {\r\n        include: (item, key, value) => item[key] === value ? true : false,\r\n        exclude: (item, key, value) => item[key] === value ? false : true\r\n    }\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    let copyOfState;\r\n\r\n    switch (action.type) {\r\n        case CONVERT_JSON:\r\n            {\r\n                let newState = _.cloneDeep(state);\r\n                let objectsForAnalysis = action.data[0].data;\r\n                let jsonObj = action.data[1].condition;\r\n                if (objectsForAnalysis.length !== 0) {\r\n                    try {\r\n                        for (let keyOfJsonObj in jsonObj) {\r\n\r\n                            if (keyOfJsonObj !== 'sort_by') {\r\n                                let arrayOfConditions = jsonObj[keyOfJsonObj];\r\n                                if (arrayOfConditions.length === 0) continue;\r\n                                let keysOfConditions = [];\r\n                                let valuesOfConditions = [];\r\n\r\n                                for (let i in arrayOfConditions) {\r\n                                    keysOfConditions.push(...Object.keys(arrayOfConditions[i]));\r\n                                    valuesOfConditions.push(...Object.values(arrayOfConditions[i]));\r\n                                }\r\n\r\n                                objectsForAnalysis = objectsForAnalysis.filter(objectForAnalysis => keysOfConditions.every((key, index) => newState.functions[keyOfJsonObj](objectForAnalysis, key, valuesOfConditions[index])));\r\n                            }\r\n                        }\r\n\r\n                        let sorting = arr => {\r\n\r\n                            arr.sort((a, b) => {\r\n                                let counter = { value: 0 };\r\n\r\n                                const isMore = (a, b, c) => {\r\n                                    if (a[jsonObj.sort_by[c.value]] > b[jsonObj.sort_by[c.value]]) {\r\n                                        return 1;\r\n                                    } else if (a[jsonObj.sort_by[c.value]] < b[jsonObj.sort_by[c.value]]) {\r\n                                        return -1;\r\n                                    } else {\r\n                                        c.value++;\r\n                                        if (jsonObj.sort_by.length < c.value) return 1;\r\n                                        return isMore(a, b, c);\r\n                                    };\r\n                                }\r\n\r\n                                if (a[jsonObj.sort_by[counter.value]] > b[jsonObj.sort_by[counter.value]]) {\r\n                                    return 1;\r\n                                } else if (a[jsonObj.sort_by[counter.value]] < b[jsonObj.sort_by[counter.value]]) {\r\n                                    return -1;\r\n                                } else {\r\n                                    counter.value++;\r\n                                    if (jsonObj.sort_by.length < counter.value) return 1;\r\n                                    return isMore(a, b, counter);\r\n                                }\r\n                            })\r\n                        };\r\n\r\n                        for (let i = 0; i < jsonObj.sort_by.length; ++i) {\r\n                            sorting(objectsForAnalysis);\r\n                        }\r\n\r\n                        newState.result = objectsForAnalysis;\r\n                    } catch (err) {\r\n                        alert(err.message);\r\n                    }\r\n                }\r\n\r\n                copyOfState = newState;\r\n            }; return copyOfState;\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const convert = (json1, json2) => {\r\n    return {\r\n        type: CONVERT_JSON,\r\n        data: [json1, json2]\r\n    }\r\n}\r\n\r\nexport default mainReducer;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input, InputLabel, Button } from '@material-ui/core';\n\nimport { convert } from './reducers/mainReducer';\n\nimport './App.css';\n\nconst App = ({ store }) => {\n    const [json1, setJSON1] = useState(undefined);\n    const [json2, setJSON2] = useState(undefined);\n    const [result, setResult] = useState(undefined);\n    const dispatch = useDispatch();\n\n    const addJSON1 = (e) => {\n        let file = e.target.files[0];\n        let reader = new FileReader();\n        reader.onload = (function (JSONFile) {\n            return function (e) {\n                try {\n                    setJSON1(JSON.parse(e.target.result));\n                } catch (error) {\n                    alert('Error');\n                }\n            }\n        })(file);\n        reader.readAsText(file);\n        e.target.value = '';\n    }\n\n    const addJSON2 = (e) => {\n        let file = e.target.files[0];\n        let reader = new FileReader();\n        reader.onload = (function (JSONFile) {\n            return function (e) {\n                try {\n                    setJSON2(JSON.parse(e.target.result));\n                } catch (error) {\n                    alert('Error');\n                }\n            }\n        })(file);\n        reader.readAsText(file);\n        e.target.value = '';\n    }\n\n    const changeJSON = (e) => {\n        dispatch(convert(json1, json2));\n        setResult(JSON.stringify(store.getState().branch1.result, null, '\\t'));\n    }\n\n\n\n    return (\n        <div className='App'>\n            <div className='wrapper'>\n                <InputLabel>Add JSON to convert</InputLabel>\n                <Input type='file' onChange={(e) => addJSON1(e)} />\n            </div>\n            <div className='wrapper'>\n                <InputLabel>Add JSON-settings for sorting and filtering</InputLabel>\n                <Input type='file' onChange={(e) => addJSON2(e)} />\n            </div>\n            <div className='wrapper'>\n                <Button variant='contained' onClick={(e) => changeJSON(e)}>Change JSON</Button>\n            </div>\n            <div className='wrapper'>\n                {result !== 'null' && result}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport mainReducer from './../reducers/mainReducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    branch1: mainReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App store={store} />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}